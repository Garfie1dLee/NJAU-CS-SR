<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32_Exper13\STM32_Exper13.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32_Exper13\STM32_Exper13.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Jun 11 10:21:50 2022
<BR><P>
<H3>Maximum Stack Usage =        424 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EXTI9_5_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; a21_right &rArr; a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f1xx_it.o(i.BusFault_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from stm32f1xx_it.o(i.EXTI0_IRQHandler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[2d]">EXTI15_10_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from stm32f1xx_it.o(i.EXTI1_IRQHandler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from stm32f1xx_it.o(i.EXTI4_IRQHandler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from stm32f1xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f1xx_it.o(i.HardFault_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[29]">I2C1_ER_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[28]">I2C1_EV_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f1xx_it.o(i.MemManage_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f1xx_it.o(i.NMI_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f1xx_it.o(i.PendSV_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[2e]">RTC_Alarm_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[2a]">SPI1_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f1xx_it.o(i.SVC_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[31]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f103x6.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[2b]">USART1_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[2c]">USART2_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[2f]">USBWakeUp_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f103x6.o(.text) referenced from startup_stm32f103x6.o(RESET)
 <LI><a href="#[32]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f103x6.o(.text)
 <LI><a href="#[30]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[32]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[38]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[94]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[95]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[96]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[97]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[98]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_showtable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_right
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtakeplayer
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtake
</UL>

<P><STRONG><a name="[87]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_showtable
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[34]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = EXTI0_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; a21_right &rArr; a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = EXTI1_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; a21_right &rArr; a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = EXTI4_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; a21_right &rArr; a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f1xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = EXTI9_5_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; a21_right &rArr; a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>GUI_DrawFont16</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, gui.o(i.GUI_DrawFont16))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_DrawFont16 &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData_16Bit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>

<P><STRONG><a name="[3e]"></a>GUI_DrawFont24</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, gui.o(i.GUI_DrawFont24))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_DrawFont24 &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData_16Bit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>

<P><STRONG><a name="[3f]"></a>GUI_DrawFont32</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, gui.o(i.GUI_DrawFont32))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_DrawFont32 &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData_16Bit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>

<P><STRONG><a name="[40]"></a>GUI_DrawPoint</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui.o(i.GUI_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData_16Bit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_circle_8
</UL>

<P><STRONG><a name="[42]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RESET
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[44]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 1228 bytes, Stack size 40 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; a21_right &rArr; a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_wuzi
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_liuzi
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showtable_wuzi
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showtable_liuzi
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_wuzi
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_liuzi
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetnow
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_wuzi
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_liuzi
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_wuzi
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_liuzi
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_wuzi
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_liuzi
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_up
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_showtable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_right
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_left
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_down
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_confirm
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_showtable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_right
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtakeplayer
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[39]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; a21_right &rArr; a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>HAL_GPIO_Init</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[45]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_wuzi
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_liuzi
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_wuzi
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_liuzi
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_wuzi
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_liuzi
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_wuzi
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_liuzi
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_wuzi
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_liuzi
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[79]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[43]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[7c]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5d]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[60]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[7a]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[62]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[5e]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[64]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[65]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[66]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 750 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[67]"></a>HAL_SPI_Init</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, stm32f1xx_hal_spi_ex.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[68]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, stm32f1xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[6a]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CheckFlag_BSY
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIv_WriteData
</UL>

<P><STRONG><a name="[61]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>LCD_Clear</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, lcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LCD_Clear &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData_16Bit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetnow
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[6e]"></a>LCD_DrawLine</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, gui.o(i.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LCD_DrawLine &rArr; LCD_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showtable_wuzi
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showtable_liuzi
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_showtable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_showtable
</UL>

<P><STRONG><a name="[3c]"></a>LCD_DrawPoint</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData_16Bit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_cleartable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont32
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont24
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont16
</UL>

<P><STRONG><a name="[6f]"></a>LCD_Init</STRONG> (Thumb, 576 bytes, Stack size 8 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LCD_Init &rArr; LCD_Clear &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_direction
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RESET
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>LCD_RESET</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd.o(i.LCD_RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_RESET &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[41]"></a>LCD_SetCursor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetCursor))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>

<P><STRONG><a name="[3b]"></a>LCD_SetWindows</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lcd.o(i.LCD_SetWindows))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont32
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont24
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont16
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[75]"></a>LCD_ShowChar</STRONG> (Thumb, 254 bytes, Stack size 64 bytes, gui.o(i.LCD_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>

<P><STRONG><a name="[72]"></a>LCD_WR_DATA</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd.o(i.LCD_WR_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIv_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[71]"></a>LCD_WR_REG</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd.o(i.LCD_WR_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_WR_REG &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIv_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[74]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_WriteRAM_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_WriteRAM_Prepare &rArr; LCD_WR_REG &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
</UL>

<P><STRONG><a name="[77]"></a>LCD_WriteReg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd.o(i.LCD_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_WriteReg &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_direction
</UL>

<P><STRONG><a name="[73]"></a>LCD_direction</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lcd.o(i.LCD_direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_direction &rArr; LCD_WriteReg &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[3d]"></a>Lcd_WriteData_16Bit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd.o(i.Lcd_WriteData_16Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIv_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont32
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont24
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont16
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SPIv_WriteData</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, spi.o(i.SPIv_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData_16Bit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>Show_Str</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, gui.o(i.Show_Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont32
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont24
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFont16
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetnow
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_wuzi
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_liuzi
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_wuzi
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_liuzi
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_judge
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_confirm
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_showtable
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printplayer
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printnumber1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printnumber
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printcard
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_clearplayer
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtakeplayer
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtake
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>SystemClock_Config</STRONG> (Thumb, 62 bytes, Stack size 72 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103x6.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[9f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[7f]"></a>_draw_circle_8</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, gui.o(i._draw_circle_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>

<P><STRONG><a name="[80]"></a>a21_calnumberandtake</STRONG> (Thumb, 392 bytes, Stack size 48 bytes, main.o(i.a21_calnumberandtake))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printnumber1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printcard
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_right
</UL>

<P><STRONG><a name="[4f]"></a>a21_calnumberandtakeplayer</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, main.o(i.a21_calnumberandtakeplayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = a21_calnumberandtakeplayer &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printplayer
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printcard
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_clearplayer
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[84]"></a>a21_clearplayer</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, main.o(i.a21_clearplayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = a21_clearplayer &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtakeplayer
</UL>

<P><STRONG><a name="[82]"></a>a21_printcard</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, main.o(i.a21_printcard))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_showtable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_right
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtakeplayer
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtake
</UL>

<P><STRONG><a name="[86]"></a>a21_printnumber</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, main.o(i.a21_printnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = a21_printnumber &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_showtable
</UL>

<P><STRONG><a name="[83]"></a>a21_printnumber1</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, main.o(i.a21_printnumber1))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = a21_printnumber1 &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtake
</UL>

<P><STRONG><a name="[85]"></a>a21_printplayer</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, main.o(i.a21_printplayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = a21_printplayer &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtakeplayer
</UL>

<P><STRONG><a name="[46]"></a>a21_right</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, main.o(i.a21_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = a21_right &rArr; a21_calnumberandtake &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printcard
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_calnumberandtake
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[58]"></a>a21_showtable</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, main.o(i.a21_showtable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = a21_showtable &rArr; a21_printcard &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printnumber
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a21_printcard
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[88]"></a>a5_cleartable</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, main.o(i.a5_cleartable))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = a5_cleartable &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_up
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_right
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_left
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_down
</UL>

<P><STRONG><a name="[47]"></a>a5_confirm</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, main.o(i.a5_confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = a5_confirm &rArr; a5_judge &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_judge
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[54]"></a>a5_down</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.a5_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = a5_down &rArr; a5_cleartable &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_cleartable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[8a]"></a>a5_judge</STRONG> (Thumb, 404 bytes, Stack size 40 bytes, main.o(i.a5_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = a5_judge &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_confirm
</UL>

<P><STRONG><a name="[53]"></a>a5_left</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.a5_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = a5_left &rArr; a5_cleartable &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_cleartable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[5b]"></a>a5_right</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.a5_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = a5_right &rArr; a5_cleartable &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_cleartable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[50]"></a>a5_showtable</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, main.o(i.a5_showtable))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = a5_showtable &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[4e]"></a>a5_up</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.a5_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = a5_up &rArr; a5_cleartable &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_cleartable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[8b]"></a>cleartable_liuzi</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.cleartable_liuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cleartable_liuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_liuzi
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_liuzi
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_liuzi
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_liuzi
</UL>

<P><STRONG><a name="[8c]"></a>cleartable_wuzi</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.cleartable_wuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cleartable_wuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_wuzi
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_wuzi
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_wuzi
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_wuzi
</UL>

<P><STRONG><a name="[49]"></a>confirm_liuzi</STRONG> (Thumb, 590 bytes, Stack size 48 bytes, main.o(i.confirm_liuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = confirm_liuzi &rArr; judge_liuzi &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_y_2
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_x_2
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_liuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[48]"></a>confirm_wuzi</STRONG> (Thumb, 368 bytes, Stack size 48 bytes, main.o(i.confirm_wuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = confirm_wuzi &rArr; judge_wuzi &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_wuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[57]"></a>down_liuzi</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.down_liuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = down_liuzi &rArr; cleartable_liuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_x_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_liuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[56]"></a>down_wuzi</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.down_wuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = down_wuzi &rArr; cleartable_wuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_y
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_wuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[89]"></a>gui_circle</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, gui.o(i.gui_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_circle_8
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_wuzi
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_liuzi
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showtable_wuzi
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showtable_liuzi
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_wuzi
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_liuzi
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_wuzi
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_liuzi
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_liuzi
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_wuzi
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_liuzi
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_wuzi
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_liuzi
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_wuzi
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_liuzi
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_up
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_showtable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_right
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_left
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_judge
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_down
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a5_cleartable
</UL>

<P><STRONG><a name="[8f]"></a>judge_liuzi</STRONG> (Thumb, 1122 bytes, Stack size 56 bytes, main.o(i.judge_liuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = judge_liuzi &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_liuzi
</UL>

<P><STRONG><a name="[90]"></a>judge_wuzi</STRONG> (Thumb, 602 bytes, Stack size 48 bytes, main.o(i.judge_wuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = judge_wuzi &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_wuzi
</UL>

<P><STRONG><a name="[52]"></a>left_liuzi</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.left_liuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = left_liuzi &rArr; cleartable_liuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_y_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_liuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[51]"></a>left_wuzi</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.left_wuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = left_wuzi &rArr; cleartable_wuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_x
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_wuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[30]"></a>main</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = main &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5c]"></a>resetnow</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, main.o(i.resetnow))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = resetnow &rArr; Show_Str &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WR_DATA &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Str
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[5a]"></a>right_liuzi</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, main.o(i.right_liuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = right_liuzi &rArr; cleartable_liuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_y_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_liuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[59]"></a>right_wuzi</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, main.o(i.right_wuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = right_wuzi &rArr; cleartable_wuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_x
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_wuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[55]"></a>showtable_liuzi</STRONG> (Thumb, 314 bytes, Stack size 40 bytes, main.o(i.showtable_liuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = showtable_liuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[4b]"></a>showtable_wuzi</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, main.o(i.showtable_wuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = showtable_wuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[92]"></a>trans_x</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.trans_x))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_wuzi
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_wuzi
</UL>

<P><STRONG><a name="[8d]"></a>trans_x_2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.trans_x_2))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_liuzi
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_liuzi
</UL>

<P><STRONG><a name="[91]"></a>trans_y</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.trans_y))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_wuzi
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down_wuzi
</UL>

<P><STRONG><a name="[8e]"></a>trans_y_2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.trans_y_2))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_liuzi
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_liuzi
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;confirm_liuzi
</UL>

<P><STRONG><a name="[4d]"></a>up_liuzi</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(i.up_liuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = up_liuzi &rArr; cleartable_liuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_liuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[4c]"></a>up_wuzi</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.up_wuzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = up_wuzi &rArr; cleartable_wuzi &rArr; gui_circle &rArr; _draw_circle_8 &rArr; GUI_DrawPoint &rArr; Lcd_WriteData_16Bit &rArr; SPIv_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_y
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cleartable_wuzi
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[78]"></a>MX_GPIO_Init</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>MX_SPI1_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>SPI_CheckFlag_BSY</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal_spi.o(i.SPI_CheckFlag_BSY))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>

<P><STRONG><a name="[6b]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, stm32f1xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CheckFlag_BSY
</UL>

<P><STRONG><a name="[63]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
